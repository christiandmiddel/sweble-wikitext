/**
 * Copyright 2011 The Open Source Research Group,
 *                University of Erlangen-NÃ¼rnberg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Horizontal Rule
 * ---------------
 *
 *   Grammar:
 *     - '----' '-'*
 *
 */

module org.sweble.wikitext.parser.parser.HorizontalRule;




// -- Horizontal Rule --[ State Aware Memoization ]-----------------------------

noinline transient WtNode HorizontalRule =
 ^{
    StateAwareResult r = (StateAwareResult) pHorizontalRuleMemoized(yyBase);
    final WikitextParserContext context = getContext();
    Result yyResult = r.getResult(context);
    if (yyResult == null)
      yyResult = r.setResult(context, pHorizontalRuleTransient(yyBase));
    if (returnTrue(r))
      return yyResult;
  }
;

noinline memoized WtNode HorizontalRuleMemoized =
 ^{
    Result yyResult = new StateAwareResult("HorizontalRule", getContext(), pHorizontalRuleTransient(yyBase));
    if (returnTrue(yyResult))
      return yyResult;
  }
;




// -- Horizontal Rule ----------------------------------------------------------

noinline transient WtNode HorizontalRuleTransient =
    "---" &{ accept(ParserAtoms.HORIZONTAL_RULE) } yyValue:HorizontalRuleChoice
  / "---"
    {
      yyValue = nf.text("---");
    }
;

private inline WtNode HorizontalRuleChoice =
    more:'-'+
    {
      String dashes = StringUtils.strrep('-', 3 + more.size());

      yyValue = setRtd(
        nf.hr(),
        dashes);
    }
  / &{ isWarningsEnabled() } HorizontalRuleAutoCorrect
;

private inline WtNode HorizontalRuleAutoCorrect =
  &{ isWarningLevelEnabled(WS_NONE) }
  {
    yyValue = nf.text("---");

    fileLooksLikeWarning(
        yyValue,
        makeSpan(yyStart - 3, yyStart),
        WS_NONE,
        "Horizontal Rule",
        "a horizontal rule consists of at least 4 dashes");
  }
;




// -- End of file -------------------------------------------------------------
