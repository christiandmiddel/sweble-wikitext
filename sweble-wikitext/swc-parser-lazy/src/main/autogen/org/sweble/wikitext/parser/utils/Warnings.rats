/**
 * Copyright 2011 The Open Source Research Group,
 *                University of Erlangen-NÃ¼rnberg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module org.sweble.wikitext.parser.utils.Warnings;




// -- Header / Body / Footer ---------------------------------------------------

header
{
  import java.util.LinkedList;
  import java.util.List;
}

body
{
  private static final WarningSeverity WS_NONE   = WarningSeverity.NONE;

  private static final WarningSeverity WS_INFO   = WarningSeverity.INFORMATIVE;

  private static final WarningSeverity WS_NORMAL = WarningSeverity.NORMAL;

  private static final WarningSeverity WS_FATAL  = WarningSeverity.FATAL;

  // ===========================================================================

  private void fileLooksLikeWarning(
      WtNode attach,
      Span range,
      WarningSeverity severity,
      String looksLikeWhat,
      String message)
  {
    getWarnings(attach).add(makeLooksLikeWarning(range, severity, looksLikeWhat, message));
  }

  protected LooksLikeWarning makeLooksLikeWarning(
      Span range,
      WarningSeverity severity,
      String looksLikeWhat,
      String message)
  {
    return new LooksLikeWarning(range, severity, getClass(), looksLikeWhat, message);
  }

  // ===========================================================================

  private void fileOddSyntaxWarning(
      WtNode attach,
      Span range,
      WarningSeverity severity,
      String message)
  {
    getWarnings(attach).add(makeOddSyntaxWarning(range, severity, message));
  }

  protected OddSyntaxWarning makeOddSyntaxWarning(
      Span range,
      WarningSeverity severity,
      String message)
  {
    return new OddSyntaxWarning(range, severity, getClass(), message);
  }

  // ===========================================================================

  private List<Warning> getWarnings(WtNode attach)
  {
    @SuppressWarnings("unchecked")
    List<Warning> warnings = (List<Warning>) attach.getAttribute("warnings");
    if (warnings == null)
    {
      warnings = new LinkedList<Warning>();
      attach.setAttribute("warnings", warnings);
    }
    return warnings;
  }
}




// -- End of file --------------------------------------------------------------
